{"version":3,"sources":["Questions.js","App.js","reportWebVitals.js","index.js"],"names":["questions","questionText","questionKey","answerOptions","displayText","answerValue","App","qs","posEmoji","useState","league","init_budget","att_pref","mid_pref","def_pref","att_weight","mid_weight","def_weight","gk_weight","userPrefs","setUserPrefs","suggestedTeam","setSuggestedTeam","handleChange","event","updatedValue","target","name","value","className","FormControl","Select","labelId","id","onChange","filter","q","map","answer","MenuItem","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","marks","min","max","onChangeCommitted","Button","variant","color","type","onClick","myHeaders","Headers","append","raw","JSON","stringify","fetch","method","headers","body","redirect","then","response","json","data","console","log","catch","error","length","player","mpg_position","player_name","price","bid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68184df3.chunk.js","sourcesContent":["const questions = [\n    {\n        questionText: \"Sélectionnez la ligue:\",\n        questionKey: \"country\",\n        answerOptions: [\n            { displayText: \"Premier League 🏴󠁧󠁢󠁥󠁮󠁧󠁿\", answerValue: \"England\"}, \n            { displayText: \"Ligue 1 🇫🇷\", answerValue: \"France\"}, \n            { displayText: \"Serie A 🇮🇹\", answerValue: \"Italy\"}, \n            { displayText: \"La Liga 🇪🇸\", answerValue: \"Spain\"}, \n        ]\n    },\n    {\n        questionText: \"Critère pour les attaquants:\",\n        questionKey: \"attCriteria\",\n        answerOptions: [\n            { displayText: \"Goals\", answerValue: \"goals\"}, \n            { displayText: \"Assists\", answerValue: \"assists\"}, \n            { displayText: \"Defensive performance\", answerValue: \"def_score\"}, \n            { displayText: \"Expected goals\", answerValue: \"xG\"}, \n            { displayText: \"Expected output (xG+xA)\", answerValue: \"expected_output\"}, \n        ]\n    }, \n    {\n        questionText: \"Critère pour les milieux:\",\n        questionKey: \"midCriteria\",\n        answerOptions: [\n            { displayText: \"Goals\", answerValue: \"goals\"}, \n            { displayText: \"Assists\", answerValue: \"assists\"}, \n            { displayText: \"Defensive performance\", answerValue: \"def_score\"}, \n            { displayText: \"Expected goals\", answerValue: \"xG\"}, \n            { displayText: \"Expected output (xG+xA)\", answerValue: \"expected_output\"}, \n        ]\n    },\n    {\n        questionText: \"Critère pour les défenseurs:\",\n        questionKey: \"defCriteria\",\n        answerOptions: [\n            { displayText: \"Goals\", answerValue: \"goals\"}, \n            { displayText: \"Assists\", answerValue: \"assists\"}, \n            { displayText: \"Defensive performance\", answerValue: \"def_score\"}, \n            { displayText: \"Expected goals\", answerValue: \"xG\"}, \n            { displayText: \"Expected output (xG+xA)\", answerValue: \"expected_output\"}, \n        ]\n    }\n]\n\nexport default questions;","import './App.css';\nimport questions from './Questions';\nimport React, { useState } from 'react';\nimport { FormControl, Button, Select, MenuItem, Slider } from '@material-ui/core';\n\nfunction App() {\n\n  const qs = questions\n\n  const posEmoji = {\n    'G': '🥊',\n    'D': '⚔️', \n    'M': '🧠',\n    'A': '⚽'\n  }\n\n  const [userPrefs, setUserPrefs] = useState({\n    // Default values\n    league: \"England\",\n    init_budget: 300,\n    att_pref: 'goals',\n    mid_pref: 'assists',\n    def_pref: 'def_score',\n    att_weight: 0.3,\n    mid_weight: 0.3,\n    def_weight: 0.3,\n    gk_weight: 0.1\n  })\n\n  const [suggestedTeam, setSuggestedTeam] = useState([])\n\n  const handleChange = (event) => {\n    let updatedValue = {}\n    updatedValue[event.target.name] = event.target.value\n    setUserPrefs({ ...userPrefs, ...updatedValue })\n  }\n\n  const handleSlideChange = (...event) => {\n    let updatedValue = {}\n    updatedValue['init_budget'] = event[1]\n    setUserPrefs({ ...userPrefs, ...updatedValue })\n  }\n\n  const handlePrefSubmit = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var raw = JSON.stringify({\n      ...userPrefs\n    });\n\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n\n    fetch(\"https://nrkf97hvad.execute-api.us-east-2.amazonaws.com/preproduction/opt\", requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setSuggestedTeam(data);\n        console.log(data)\n      }\n      )\n      .catch(error => console.log('error', error));\n  }\n\n  return (\n    <div className=\"p-10 items-center justify-center flex flex-row\">\n      <FormControl>\n\n        {/* League */}\n        <div >\n          <p >League</p>\n          <Select\n            labelId=\"league-select-label\"\n            id=\"league-selected-id\"\n            value={userPrefs.league}\n            onChange={handleChange}\n            name=\"league\"\n          >\n            {qs.filter(q => q.questionKey === 'country')[0].answerOptions.map(answer => (\n              <MenuItem key={answer.answerValue} value={answer.answerValue}>{answer.displayText}</MenuItem>\n            )\n            )}\n          </Select>\n        </div>\n        <br />\n\n        {/* Budget */}\n        <div>\n          <p>Initial budget</p>\n\n          <Slider\n            defaultValue={300}\n            aria-labelledby=\"budget-slider\"\n            valueLabelDisplay=\"auto\"\n            step={10}\n            marks\n            min={100}\n            max={500}\n            onChangeCommitted={handleSlideChange}\n            name=\"init_budget\"\n          />\n        </div>\n\n        {/* Attack prefs */}\n        <div>\n          <p>Attack preferences</p>\n          <Select\n            labelId=\"att-pref-label\"\n            id=\"att-prefs-id\"\n            value={userPrefs.att_pref}\n            onChange={handleChange}\n            name=\"att_pref\"\n          >\n            {qs.filter(q => q.questionKey === 'attCriteria')[0].answerOptions.map(answer => (\n              <MenuItem key={answer.answerValue} value={answer.answerValue}>{answer.displayText}</MenuItem>\n            )\n            )}\n          </Select>\n        </div>\n        <br />\n\n\n        {/* Midfield prefs */}\n        <div>\n          <p>Midfield preferences</p>\n          <Select\n            labelId=\"mid-pref-label\"\n            id=\"mid-prefs-id\"\n            name=\"mid_pref\"\n            value={userPrefs.mid_pref}\n            onChange={handleChange}\n          >\n            {qs.filter(q => q.questionKey === 'midCriteria')[0].answerOptions.map(answer => (\n              <MenuItem key={answer.answerValue} value={answer.answerValue}>{answer.displayText}</MenuItem>\n            )\n            )}\n          </Select>\n        </div>\n        <br />\n\n\n        {/* Defence prefs */}\n        <div>\n          <h1>Defence preferences</h1>\n          <Select\n            labelId=\"def-pref-label\"\n            id=\"def-prefs-id\"\n            name=\"def_pref\"\n            value={userPrefs.def_pref}\n            onChange={handleChange}\n          >\n            {qs.filter(q => q.questionKey === 'defCriteria')[0].answerOptions.map(answer => (\n              <MenuItem key={answer.answerValue} value={answer.answerValue}>{answer.displayText}</MenuItem>\n            )\n            )}\n          </Select>\n        </div>\n        <br />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={handlePrefSubmit}\n        >\n          Build team 🚀\n        </Button>\n      </FormControl>\n\n      {/* Suggested team */}\n      <div className=\"mx-8\">\n        {suggestedTeam.length > 0 && \n        <table className=\"table-auto border-solid border-2 rounded\">\n          <tr>\n            <th>Player</th>\n            <th>Price</th>\n            <th>Bid</th>\n          </tr>\n          {suggestedTeam.length > 0 &&\n            suggestedTeam.map(player => (\n              // TODO Add solid borders between according to position \n              <tr key={player.player_name} className=\"bg-green-50 border-2\">\n                <td > { posEmoji[player.mpg_position] + \" | \" + player.player_name} </td>\n                <td > {player.price} </td>\n                <td > <strong>{player.bid}</strong> </td>\n              </tr>\n            ))\n          }\n        </table> }\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}